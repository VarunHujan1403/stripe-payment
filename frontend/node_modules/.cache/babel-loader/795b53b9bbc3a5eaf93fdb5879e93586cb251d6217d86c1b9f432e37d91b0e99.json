{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VARUN ANSS\\\\OneDrive\\\\Desktop\\\\Swio\\\\frontend\\\\src\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\n// PaymentPage.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [amount, setAmount] = useState('');\n  const handleToken = async token => {\n    try {\n      const response = await axios.post('/api/transactions', {\n        name,\n        amount,\n        transactionID: token.id\n      });\n      console.log(response.data.message);\n      // You can redirect the user or show a success message here\n    } catch (error) {\n      console.error('Error:', error.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StripeCheckout, {\n      token: handleToken,\n      stripeKey: \"your_stripe_public_key\",\n      amount: Number(amount) * 100 // Stripe takes amount in cents\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"6agCT4YV4sENGJ4f1rM1CKjBTro=\");\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","axios","StripeCheckout","jsxDEV","_jsxDEV","PaymentPage","_s","name","setName","amount","setAmount","handleToken","token","response","post","transactionID","id","console","log","data","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","stripeKey","Number","_c","$RefreshReg$"],"sources":["C:/Users/VARUN ANSS/OneDrive/Desktop/Swio/frontend/src/PaymentPage.js"],"sourcesContent":["// PaymentPage.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\n\r\nconst PaymentPage = () => {\r\n  const [name, setName] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleToken = async (token) => {\r\n    try {\r\n      const response = await axios.post('/api/transactions', {\r\n        name,\r\n        amount,\r\n        transactionID: token.id\r\n      });\r\n      console.log(response.data.message);\r\n      // You can redirect the user or show a success message here\r\n    } catch (error) {\r\n      console.error('Error:', error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-page\">\r\n      <h1>Payment Page</h1>\r\n      <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n      <input type=\"number\" placeholder=\"Amount\" value={amount} onChange={(e) => setAmount(e.target.value)} />\r\n      <StripeCheckout\r\n        token={handleToken}\r\n        stripeKey=\"your_stripe_public_key\"\r\n        amount={Number(amount) * 100} // Stripe takes amount in cents\r\n      >\r\n        <button>Pay Now</button>\r\n      </StripeCheckout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,mBAAmB,EAAE;QACrDP,IAAI;QACJE,MAAM;QACNM,aAAa,EAAEH,KAAK,CAACI;MACvB,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC;MAClC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACR,QAAQ,CAACM,IAAI,CAACE,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BnB,OAAA;MAAAmB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,MAAM;MAACC,KAAK,EAAEvB,IAAK;MAACwB,QAAQ,EAAGC,CAAC,IAAKxB,OAAO,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/FvB,OAAA;MAAOwB,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC,QAAQ;MAACC,KAAK,EAAErB,MAAO;MAACsB,QAAQ,EAAGC,CAAC,IAAKtB,SAAS,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvGvB,OAAA,CAACF,cAAc;MACbU,KAAK,EAAED,WAAY;MACnBuB,SAAS,EAAC,wBAAwB;MAClCzB,MAAM,EAAE0B,MAAM,CAAC1B,MAAM,CAAC,GAAG,GAAI,CAAC;MAAA;MAAAc,QAAA,eAE9BnB,OAAA;QAAAmB,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhCID,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}